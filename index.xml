<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lowRISC</title>
    <link>http://www.lowrisc.org/</link>
    <description>Recent content on lowRISC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Jun 2015 17:02:57 +0100</lastBuildDate>
    <atom:link href="http://www.lowrisc.org/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Second RISC-V Workshop: Day One</title>
      <link>http://www.lowrisc.org/blog/2015/06/second-risc-v-workshop-day-one</link>
      <pubDate>Mon, 29 Jun 2015 17:02:57 +0100</pubDate>
      
      <guid>http://www.lowrisc.org/blog/2015/06/second-risc-v-workshop-day-one</guid>
      <description>

&lt;p&gt;The &lt;a href=&#34;http://riscv.org/workshop-jun2015.html&#34;&gt;second RISC-V workshop&lt;/a&gt; is going
on today and tomorrow in Berkeley, California. I&amp;rsquo;ll be keeping a semi-live
blog of talks and announcements throughout the day.&lt;/p&gt;

&lt;h2 id=&#34;introductions-and-welcome-krste-asanović:1198e896ab6f8fa7b8bfab04cfcd8c73&#34;&gt;Introductions and welcome: Krste Asanović&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The beginning of Krste&amp;rsquo;s talk will be familiar for anyone who&amp;rsquo;s seen an
introduction to RISC-V before. Pleasingly, there are a lot of new faces here
at the workshop so the introduction of course makes a lot of sense.&lt;/li&gt;
&lt;li&gt;Although the core RISC-V effort is focused on the ISA specification, there
is interest in looking to expand this to look at how to standardise access to
I/O etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Alex Bradbury&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Summer of Code students for lowRISC</title>
      <link>http://www.lowrisc.org/blog/2015/05/summer-of-code-students-for-lowrisc</link>
      <pubDate>Wed, 13 May 2015 20:45:07 +0100</pubDate>
      
      <guid>http://www.lowrisc.org/blog/2015/05/summer-of-code-students-for-lowrisc</guid>
      <description>&lt;p&gt;lowRISC was fortunate enough to be chosen as a mentoring organisation in this
year&amp;rsquo;s &lt;a href=&#34;https://developers.google.com/open-source/soc/&#34;&gt;Google Summer of
Code&lt;/a&gt;. The Google Summer of
Code program funds students to work on open source projects over the summer.
We had 52 applications across the &lt;a href=&#34;http://www.lowrisc.org/docs/gsoc-2015-ideas/&#34;&gt;range of project
ideas&lt;/a&gt; we&amp;rsquo;ve been advertising.
As you can see from the range of project ideas, lowRISC is taking part as an
umbrella organisation, working with a number of our friends in the wider open
source software and hardware community.
We were allocated three slots from Google, and given the volume of high
quality applications making the selection was tremendously difficult. We have
actually been able to fund an additional three applicants from other sources,
but even then there were many promising projects we couldn&amp;rsquo;t support. We are
extremely grateful to all the students who put so much time and effort in to
their proposals, and to everyone who volunteered to mentor. The six &amp;lsquo;summer of
code&amp;rsquo; projects for lowRISC are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.google-melange.com/gsoc/project/details/google/gsoc2015/asy/5757334940811264&#34;&gt;An online Verilog IDE based on
YosysJS&lt;/a&gt;.
Baptiste Duprat mentored by Clifford Wolf&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Baptiste will be working with an Emscripten-compiled version of
the &lt;a href=&#34;http://www.clifford.at/yosys/&#34;&gt;Yosys&lt;/a&gt; logic synthesis tool, building an
online Verilog IDE on top
of it which would be particularly suitable for training and teaching
materials. A big chunk of the proposed work is related to visualisation of the
generated logic. Improving the accessibility of hardware design is essential for
growing the potential contributor base to open source hardware
projects like lowRISC, and this is just the start of our efforts in that
space.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.google-melange.com/gsoc/project/details/google/gsoc2015/hesham/5868011953061888&#34;&gt;Porting seL4 to
RISC-V&lt;/a&gt;.
Hesham ALMatary mentored by Stefan Wallentowitz&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sel4.systems/&#34;&gt;seL4&lt;/a&gt; is a formally verified microkernel, which
currently has ports
for x86 and ARM. Hesham will be performing a complete port to
RISC-V/lowRISC. Security and microkernels are of great interest to
many in the community. It&amp;rsquo;s also a good opportunity to expand RISC-V platform
support and to put the recently released &lt;a href=&#34;https://blog.riscv.org/2015/05/risc-v-draft-privileged-architecture-version-1-7-released/&#34;&gt;RISC-V Privileged Architecture
Specification&lt;/a&gt;
through its paces. Hesham previously performed a port of RTEMS to
OpenRISC.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.google-melange.com/gsoc/project/details/google/gsoc2015/prannoy1994/5651442522128384&#34;&gt;Porting jor1k to
RISC-V&lt;/a&gt;.
Prannoy Pilligundla mentored by Sebastian Macke&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://s-macke.github.io/jor1k/&#34;&gt;jor1k&lt;/a&gt; is by far the
&lt;a href=&#34;https://github.com/s-macke/jor1k/wiki/Benchmark-with-other-emulators&#34;&gt;fastest&lt;/a&gt;
Javascript-based full system
simulator. It also features a network device, filesystem support, and
a framebuffer. Prannoy will be adding support for RISC-V and look at
supporting some of the features we offer on lowRISC such as &lt;a href=&#34;http://www.lowrisc.org/docs/memo-2014-001-tagged-memory-and-minion-cores/&#34;&gt;minion
cores or tagged
memory&lt;/a&gt;.
This will be great not only as a demo, but
also have practical uses in tutorial or educational material.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;TCP offload to minion cores using rump kernels. Sebastian Wicki
mentored by Justin Cormack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The intention here is to get a &lt;a href=&#34;http://rumpkernel.org/&#34;&gt;rump kernel&lt;/a&gt;
(essentially a libified
NetBSD) running bare-metal on a simple RISC-V system and evaluate
exposing the TCP/IP stack for use by other cores. e.g. a TCP/IP
offload engine running on a minion core. TCP offload is a good
starting point, but of course the same concept could be applied
elsewhere. For example, running a USB mass storage driver (and filesystem
implementation) on a minion core and providing a simple high-level
interface to the application cores.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Extend Tavor to support directed generation of assembly test cases.
Yoann Blein mentored by Markus Zimmermann&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zimmski/tavor&#34;&gt;Tavor&lt;/a&gt; is a sophisticated fuzzing tool
implemented in Go. Yoann
will be extending it to more readily support specifying instruction
set features and generating a fuzzing suite targeting an ISA such as
RISC-V. Yoann has some really interesting ideas on how to go about
this, so I&amp;rsquo;m really interested in seeing where this on ends up.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Implement a Wishbone to TileLink bridge and extend TileLink
documentation. Thomas Repetti mentored by Wei Song&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Wishbone_%28computer_bus%29&#34;&gt;Wishbone&lt;/a&gt; is the
interconnect of choice for most existing open
source IP cores, including most devices on
&lt;a href=&#34;http://opencores.org/&#34;&gt;opencores.org&lt;/a&gt;. The Berkeley
&lt;a href=&#34;https://github.com/ucb-bar/rocket-chip&#34;&gt;Rocket&lt;/a&gt; RISC-V implementation uses
their own &amp;lsquo;TileLink&amp;rsquo; protocol (we provide a &lt;a href=&#34;http://www.lowrisc.org/docs/tutorial/rocket-chip/&#34;&gt;brief
overview&lt;/a&gt;. By providing a
reusable bridge, this project will allow the easy reuse of opencores devices
and leverage the many man-years of effort that has already gone in to them.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first 3 of the above projects are part of Google Summer of Code
and the bottom 3 directly funded, operating over roughly the same timeline.
We&amp;rsquo;re also going to be having two local
students interning with us here at the University of Cambridge
Computer Lab starting towards the end of June, so it&amp;rsquo;s going to be a
busy and productive summer. It bears repeating just how much we appreciate the
support of everyone involved so far - Google through their Summer of Code
initiative, the students, and those who&amp;rsquo;ve offered to act as mentors. We&amp;rsquo;re
very excited about these projects, so please join us in welcoming the students
involved to our community. If you have any questions, suggestions, or guidance
please do leave them in the comments.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Alex Bradbury&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>lowRISC tagged memory preview release</title>
      <link>http://www.lowrisc.org/blog/2015/04/lowrisc-tagged-memory-preview-release</link>
      <pubDate>Mon, 13 Apr 2015 22:28:10 +0000</pubDate>
      
      <guid>http://www.lowrisc.org/blog/2015/04/lowrisc-tagged-memory-preview-release</guid>
      <description>&lt;p&gt;We&amp;rsquo;re pleased to announce the &lt;a href=&#34;http://www.lowrisc.org/docs/tutorial/&#34;&gt;first lowRISC preview release&lt;/a&gt;, demonstrating support for tagged memory as
described in &lt;a href=&#34;http://www.lowrisc.org/docs/memo-2014-001-tagged-memory-and-minion-cores/&#34;&gt;our memo&lt;/a&gt;. Our ambition with lowRISC is to provide an open-source System-on-Chip
platform for others to build on, along with low-cost development boards
featuring a reference implementation. Although there&amp;rsquo;s more work to be done on
the tagged memory implementation, now seemed a good time to document what
we&amp;rsquo;ve done in order for the wider community to take a look. Please see our
&lt;a href=&#34;http://www.lowrisc.org/docs/tutorial/&#34;&gt;full tutorial&lt;/a&gt; which describes in some
detail the changes we&amp;rsquo;ve made to the Berkeley &lt;a href=&#34;https://github.com/ucb-bar/rocket&#34;&gt;Rocket
core&lt;/a&gt;, as well as how you can build and try
it out for yourself (either in simulation, or on an FPGA). We&amp;rsquo;ve gone to some
effort to produce this documentation, both to document our work, and to share
our experiences building upon the Berkeley RISC-V code releases in the hopes
they&amp;rsquo;ll be useful to other groups.&lt;/p&gt;

&lt;p&gt;The initial motivation for tagged memory was to prevent control-flow hijacking
attacks, though there are a range of other potential uses including
fine-grained memory synchronisation, garbage collection, and debug tools.&lt;br /&gt;
Please note that the instructions used to manipulate tagged memory in this
release (&lt;code&gt;ltag&lt;/code&gt; and &lt;code&gt;stag&lt;/code&gt;) are only temporary and chosen simply because they
require minimal changes to the core pipeline. Future work will include
exploring better ISA support, collecting performance numbers across a range of
tagged memory uses and tuning the tag cache. We are also working on developing
an &amp;lsquo;untethered&amp;rsquo; version of the SoC with the necessary peripherals integrated
for standalone operation.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;ve visited lowrisc.org before, you&amp;rsquo;ll have noticed we&amp;rsquo;ve changed a few
things around. Keep an eye on this blog (and its &lt;a href=&#34;http://www.lowrisc.org/index.xml&#34;&gt;RSS
feed&lt;/a&gt;) to keep an eye on developments - we
expect to be updating at least every couple of weeks. We&amp;rsquo;re very grateful to
the RISC-V team at Berkeley for all their support and guidance. A large
portion of the credit for this initial code release goes to &lt;a href=&#34;http://wsong83.github.io/&#34;&gt;Wei
Song&lt;/a&gt;, who&amp;rsquo;s been working tirelessly on the HDL
implementation.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

